package me.xginko.aef.modules.lagpreventions;

import com.cryptomorin.xseries.XEntityType;
import me.xginko.aef.modules.AEFModule;
import me.xginko.aef.utils.MaterialUtil;
import org.bukkit.entity.Item;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageEvent;

public class NoShulkerDrops extends AEFModule implements Listener {

    public NoShulkerDrops() {
        super("lag-preventions.anti-shulker-drops");
        config.addComment(configPath + ".enable",
                "Disables shulkers dropping stored items when blown up.\n" +
                "This helps fix client- and serverside lag when done often and fast.");
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return config.getBoolean(configPath + ".enable", false);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onEntityDamage(EntityDamageEvent event) {
        if (event.getEntityType() != XEntityType.ITEM.get()) return;
        if (event.getCause() != EntityDamageEvent.DamageCause.BLOCK_EXPLOSION && event.getCause() != EntityDamageEvent.DamageCause.ENTITY_EXPLOSION) return;
        Item item = (Item) event.getEntity();
        if (MaterialUtil.SHULKER_BOXES.contains(item.getItemStack().getType())) {
            event.setCancelled(true); // Cancel damage so the drop logic doesn't happen
            item.remove(); // remove entity
        }
    }
}
